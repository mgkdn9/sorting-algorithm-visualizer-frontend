{"version":3,"sources":["components/shared/Header.js","components/shared/RequireAuth.js","components/Graph.js","components/Home.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","components/AlgoTest.js","components/MyScores.js","App.js","index.js"],"names":["linkStyle","color","textDecoration","authenticatedOptions","Nav","Link","as","to","style","unauthenticatedOptions","Header","user","Navbar","bg","fixed","variant","expand","collapseOnSelect","Brand","paddingLeft","Toggle","Collapse","id","className","email","RequireAuth","children","replace","Graph","array","width","useState","window","innerWidth","setWidth","useEffect","handleResize","addEventListener","removeEventListener","useWindowWidth","maxBars","Math","floor","step","ceil","length","bars","filter","_","i","map","element","index","barWidth","max","height","marginRight","backgroundColor","display","alignItems","border","padding","boxSizing","overflow","Home","props","marginTop","frontSize","textAlign","fontSize","maxWidth","margin","Stack","hmtlFor","whiteSpace","onChange","changeDelay","type","min","value","delay","justifyContent","overflowX","overflowY","arrColors","Button","disabled","busy","onClick","bubbleSort","quickSort","mergeSort","heapSort","setArray","regenerate","apiUrls","apiUrl","location","hostname","signIn","credentials","axios","url","method","data","password","SignUp","setEmail","setPassword","passwordConfirmation","setPasswordConfirmation","navigate","useNavigate","Form","onSubmit","event","preventDefault","setUser","password_confirmation","signUp","then","res","catch","error","Group","controlId","Label","Control","required","name","placeholder","e","target","SignIn","console","log","SignOut","msgAlert","clearUser","ButtonGroup","headers","Authorization","token","signOut","finally","ChangePassword","oldPassword","setOldPassword","newPassword","setNewPassword","passwords","old","new","changePassword","AlgoTest","currentQuestion","setCurrentQuestion","userScore","setUserScore","userPercent","setUserPercent","precent","heapArray","mergeArray","quickArray","bubbleArray","runAgain","container","flexDirection","title","subtitle","paddingBottom","question","button","submitQuestion","checked","bHeap","bMerge","bQuick","bBubble","postScore","percent","preJSONBody","userId","_id","requestOptions","body","JSON","stringify","fetch","postedScore","err","column","Check","label","MyScores","reset","setReset","myScores","setMyScores","json","foundObject","deleteScore","resBody","scoreStyle","columnStyle","greenText","redText","arrDiv","score","App","setBusy","generate","arrayHome","setArrayHome","arrayTestQuick","setArrayTestQuick","arrayTestBubble","setArrayTestBubble","arrayTestMerge","setArrayTestMerge","arrayTestHeap","setArrayTestHeap","setDelay","push","random","swap","index1","index2","temp","sleepThenSwap","a","sleep","ms","Promise","resolve","setTimeout","n","bTest","partition","divideAndConquer","subArray","left","right","leftIndex","rightIndex","pivot","j","merge","mergeSortRec","arr","maxele","beg","end","mid","k","tempArray","heapify","largest","r","l","path","href","includes","reload","setArrayBubble","setArrayQuick","setArrayHeap","setArrayMerge","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.be998894.chunk.js","sourcesContent":["import React from \"react\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport { Link } from \"react-router-dom\";\n\nconst linkStyle = {\n  color: \"white\",\n  textDecoration: \"none\",\n};\n\nconst authenticatedOptions = (\n  <>\n    <Nav.Link as={Link} to=\"my-scores\" style={linkStyle}>\n      My Scores\n    </Nav.Link>\n    <Nav.Link as={Link} to=\"change-password\" style={linkStyle}>\n      Change Password\n    </Nav.Link>\n    <Nav.Link as={Link} to=\"sign-out\" style={linkStyle}>\n      Log out\n    </Nav.Link>\n  </>\n);\n\nconst unauthenticatedOptions = (\n  <>\n    <Nav.Link as={Link} to=\"sign-up\" style={linkStyle}>\n      Sign Up\n    </Nav.Link>\n    <Nav.Link as={Link} to=\"sign-in\" style={linkStyle}>\n      Log In\n    </Nav.Link>\n  </>\n);\n\nconst Header = ({ user }) => (\n  <Navbar\n    bg=\"secondary\"\n    fixed=\"top\"\n    variant=\"dark\"\n    expand=\"sm\"\n    collapseOnSelect\n  >\n    <Navbar.Brand as={Link} to=\"/\" style={{ ...linkStyle, paddingLeft: \"10px\" }}>\n      AlgoViews\n    </Navbar.Brand>\n\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\n      <Nav className=\"ml-auto\">\n        <Nav.Link as={Link} to=\"/algo-test\" style={linkStyle}>\n          Test Your Knowledge\n        </Nav.Link>\n        {user && (\n          <span className=\"navbar-text mr-2\">Welcome, {user.email}</span>\n        )}\n        {user ? authenticatedOptions : unauthenticatedOptions}\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar>\n);\n\nexport default Header;\n","import { Navigate } from 'react-router-dom'\n\nexport default function RequireAuth({ user, children }) {\n\n\treturn user !== null ? children : <Navigate to='/sign-in' replace />\n}\n","// Graph.jsx\nimport React, { useState, useEffect } from \"react\";\n\n// Hook to track window width\nconst useWindowWidth = () => {\n  const [width, setWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    const handleResize = () => setWidth(window.innerWidth);\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return width;\n};\n\nconst Graph = ({ array }) => {\n  const width = useWindowWidth();\n\n  // Decide max bars based on screen width\n  const maxBars = Math.floor(width / 5); // 5px minimum per bar\n  const step = Math.ceil(array.length / maxBars); // pick every Nth element\n\n  const bars = array\n    .filter((_, i) => i % step === 0)\n    .map((element, index) => {\n      const barWidth = Math.max(Math.floor(width / maxBars) - 2, 5); // bar width minus margin\n      const style = {\n        height: `${element / 3}px`,\n        width: `${barWidth}px`,\n        marginRight: \"2px\",\n        backgroundColor: \"pink\",\n      };\n      return <div key={index} style={style}></div>;\n    });\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"flex-end\",\n        width: \"100%\",\n        height: \"400px\",\n        border: \"5px solid black\",\n        padding: \"5px\",\n        boxSizing: \"border-box\",\n        overflow: \"hidden\",\n      }}\n    >\n      {bars}\n    </div>\n  );\n};\n\nexport default Graph;\n","import Graph from \"../components/Graph\";\nimport React from \"react\";\n\n// Bootstrap Components\nimport Button from \"react-bootstrap/Button\";\nimport Stack from \"react-bootstrap/Stack\";\n\nconst Home = (props) => {\n  const container = {\n    marginTop: \"100px\",\n  };\n  const title = {\n    frontSize: \"40px\",\n    textAlign: \"center\",\n  };\n  const subtitle = {\n    fontSize: \"20px\",\n    textAlign: \"center\",\n    width: \"100%\",\n    maxWidth: \"650px\",\n    margin: \"0 auto\",\n    padding: \"0 10px 20px 10px\",\n  };\n  const graph = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"400px\",\n    overflowX: \"auto\",\n    overflowY: \"auto\",\n    border: \"5px solid black\",\n  };\n\n  return (\n    <>\n      <div style={container}>\n        <h1 style={title}>AlgoViews</h1>\n        <p style={subtitle}>\n          This App was built to help you study and learn more on sorting\n          algrithms.\n        </p>\n        <br></br>\n        <Stack>\n          <div className=\"inputContainer\">\n            <div className=\"slidecontainer\">\n              <label\n                hmtlFor=\"animationSpeed\"\n                style={{\n                  display: \"inline-block\",\n                  marginRight: \"8px\",\n                  whiteSpace: \"nowrap\",\n                }}\n              >\n                Animation Speed:\n              </label>\n              <input\n                onChange={props.changeDelay}\n                type=\"range\"\n                min=\"1\"\n                max=\"100\"\n                value={props.delay}\n                className=\"slider\"\n                id=\"animationSpeed\"\n              />\n            </div>\n          </div>\n          <div style={graph} className=\"flexContainer\">\n            <Graph array={props.array} arrColors={props.arrColors} />\n          </div>\n          <div className=\"flexContainer\">\n            <Button\n              disabled={props.busy}\n              className=\"stackbutton\"\n              variant=\"secondary\"\n              onClick={() =>\n                props.bubbleSort(props.array, props.array.length, false)\n              }\n            >\n              Bubble Sort\n            </Button>\n            <Button\n              disabled={props.busy}\n              className=\"stackbutton\"\n              variant=\"secondary\"\n              onClick={() => props.quickSort(props.array, false)}\n            >\n              Quick Sort\n            </Button>\n            <Button\n              disabled={props.busy}\n              className=\"stackbutton\"\n              variant=\"secondary\"\n              onClick={() => props.mergeSort(props.array, false)}\n            >\n              Merge Sort\n            </Button>\n            <Button\n              disabled={props.busy}\n              className=\"stackbutton\"\n              variant=\"secondary\"\n              onClick={() => props.heapSort(props.array, false)}\n            >\n              Heap Sort\n            </Button>\n          </div>\n          <Button\n            className=\"stackbutton\"\n            id=\"regen-btn\"\n            variant=\"primary\"\n            onClick={() => props.setArray(props.regenerate())}\n          >\n            Regenerate Array\n          </Button>\n        </Stack>\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","let apiUrl\nconst apiUrls = {\n    // YOU MUST CHANGE PRODUCTION URL WHEN DEPLOYING\n\tproduction: 'https://sorting-algorithm-visualizer-1umf.onrender.com',\n\tdevelopment: 'http://localhost:8000',\n}\n\nif (window.location.hostname === 'localhost') {\n\tapiUrl = apiUrls.development\n} else {\n\tapiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (credentials) => {\n\treturn axios({\n\t\tmethod: 'POST',\n\t\turl: apiUrl + '/sign-up',\n\t\tdata: {\n\t\t\tcredentials: {\n\t\t\t\temail: credentials.email,\n\t\t\t\tpassword: credentials.password,\n\t\t\t\tpassword_confirmation: credentials.passwordConfirmation,\n\t\t\t},\n\t\t},\n\t})\n}\n\nexport const signIn = (credentials) => {\n\treturn axios({\n\t\turl: apiUrl + '/sign-in',\n\t\tmethod: 'POST',\n\t\tdata: {\n\t\t\tcredentials: {\n\t\t\t\temail: credentials.email,\n\t\t\t\tpassword: credentials.password,\n\t\t\t},\n\t\t},\n\t})\n}\n\nexport const signOut = (user) => {\n\treturn axios({\n\t\turl: apiUrl + '/sign-out',\n\t\tmethod: 'DELETE',\n\t\theaders: {\n\t\t\tAuthorization: `Token token=${user.token}`,\n\t\t},\n\t})\n}\n\nexport const changePassword = (passwords, user) => {\n\treturn axios({\n\t\turl: apiUrl + '/change-password',\n\t\tmethod: 'PATCH',\n\t\theaders: {\n\t\t\tAuthorization: `Token token=${user.token}`,\n\t\t},\n\t\tdata: {\n\t\t\tpasswords: {\n\t\t\t\told: passwords.oldPassword,\n\t\t\t\tnew: passwords.newPassword,\n\t\t\t},\n\t\t},\n\t})\n}\n","// import React, { Component } from 'react'\nimport React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignUp = (props) => {\n    \n    const container = {\n        marginTop: '100px'\n    }\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [passwordConfirmation, setPasswordConfirmation] = useState('')\n\n    const navigate = useNavigate()\n\n\tconst onSignUp = (event) => {\n\t\tevent.preventDefault()\n\n\t\tconst {setUser} = props\n\n        const credentials = {email, password, passwordConfirmation}\n\n\t\tsignUp(credentials)\n\t\t\t.then(() => signIn(credentials))\n\t\t\t.then((res) => setUser(res.data.user))\n\t\t\t.then(() => navigate('/'))\n\t\t\t.catch((error) => {\n                setEmail('')\n                setPassword('')\n                setPasswordConfirmation('')\n\t\t\t})\n\t}\n\n\n    return (\n        <div style={container} className='row'>\n            <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n                <h3>Sign Up</h3>\n                <Form onSubmit={onSignUp}>\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control\n                            required\n                            type='email'\n                            name='email'\n                            value={email}\n                            placeholder='Enter email'\n                            onChange={e => setEmail(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            required\n                            name='password'\n                            value={password}\n                            type='password'\n                            placeholder='Password'\n                            onChange={e => setPassword(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Form.Group controlId='passwordConfirmation'>\n                        <Form.Label>Password Confirmation</Form.Label>\n                        <Form.Control\n                            required\n                            name='passwordConfirmation'\n                            value={passwordConfirmation}\n                            type='password'\n                            placeholder='Confirm Password'\n                            onChange={e => setPasswordConfirmation(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Button variant='primary' type='submit'>\n                        Submit\n                    </Button>\n                </Form>\n            </div>\n        </div>\n    )\n\n}\n\nexport default SignUp","import React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignIn = (props) => {\n    \n    const container = {\n        marginTop: '100px'\n    }\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const navigate = useNavigate()\n\n\t// handleChange = (event) =>\n\t// \tthis.setState({\n\t// \t\t[event.target.name]: event.target.value,\n\t// \t})\n\n\tconst onSignIn = (event) => {\n\t\tevent.preventDefault()\n        console.log('the props', props)\n\t\tconst { setUser } = props\n\n        const credentials = {email, password}\n\n\t\tsignIn(credentials)\n\t\t\t.then((res) => setUser(res.data.user))\n\t\t\t.then(() => navigate('/'))\n\t\t\t.catch((error) => {\n                setEmail('')\n                setPassword('')\n\t\t\t})\n\t}\n\n    return (\n        <div style={container} className='row'>\n            <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n                <h3>Sign In</h3>\n                <Form onSubmit={onSignIn}>\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control\n                            required\n                            type='email'\n                            name='email'\n                            value={email}\n                            placeholder='Enter email'\n                            onChange={e => setEmail(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            required\n                            name='password'\n                            value={password}\n                            type='password'\n                            placeholder='Password'\n                            onChange={e => setPassword(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Button variant='primary' type='submit'>\n                        Submit\n                    </Button>\n                </Form>\n            </div>\n        </div>\n    )\n}\n\nexport default SignIn\n","import { useNavigate } from 'react-router-dom'\n\nimport {Button, ButtonGroup} from 'react-bootstrap'\n\nimport { signOut } from '../../api/auth'\n\nconst SignOut = (props) => {\n\n    const container = {\n        marginTop: '100px'\n    }\n\n\tconst { msgAlert, clearUser, user } = props\n    console.log(props)\n\n    const navigate = useNavigate()\n\n    const onSignOut = () => {\n\t\tsignOut(user)\n\t\t\t.finally(() => navigate('/'))\n\t\t\t.finally(() => clearUser())\n    }\n\n    const onCancel = () => {\n        navigate('/')\n    }\n\n\treturn (\n\t\t<>\n            <div style={container} className='row'>\n                <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n                    <h2>Are you sure you want to sign out?</h2>\n                    <small>We hate to see you go...</small><br/>\n                    <ButtonGroup>\n                        <Button variant='danger' onClick={onSignOut}>\n                            Sign Out\n                        </Button>\n                        <Button variant='warning' onClick={onCancel}>\n                            Cancel\n                        </Button>\n                    </ButtonGroup>\n                </div>\n            </div>\n\t\t</>\n\t)\n}\n\nexport default SignOut\n","import React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst ChangePassword = (props) => {\n    \n    const [oldPassword, setOldPassword] = useState('')\n    const [newPassword, setNewPassword] = useState('')\n\n    const navigate = useNavigate()\n\n\tconst onChangePassword = (event) => {\n\t\tevent.preventDefault()\n\n\t\tconst { msgAlert, user } = props\n        console.log('the user', user)\n        \n\n        const passwords = {oldPassword, newPassword}\n\n\t\tchangePassword(passwords, user)\n\t\t\t.then(() => navigate('/'))\n\t\t\t.catch((error) => {\n\t\t\t\tsetOldPassword('')\n                setNewPassword('')\n\t\t\t})\n\t}\n\n\n\n    return (\n        <div className='row'>\n            <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n                <h3>Change Password</h3>\n                <Form onSubmit={onChangePassword}>\n                    <Form.Group controlId='oldPassword'>\n                        <Form.Label>Old password</Form.Label>\n                        <Form.Control\n                            required\n                            name='oldPassword'\n                            value={oldPassword}\n                            type='password'\n                            placeholder='Old Password'\n                            onChange={e => setOldPassword(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Form.Group controlId='newPassword'>\n                        <Form.Label>New Password</Form.Label>\n                        <Form.Control\n                            required\n                            name='newPassword'\n                            value={newPassword}\n                            type='password'\n                            placeholder='New Password'\n                            onChange={e => setNewPassword(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Button variant='primary' type='submit'>\n                        Submit\n                    </Button>\n                </Form>\n            </div>\n        </div>\n    )\n}\n\nexport default ChangePassword","import React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router';\nimport apiUrl from '../apiConfig'\n\n\nimport Graph from '../components/Graph'\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form'\n\nconst AlgoTest = (props) => {\n\n    //----- STATE VARIABLES -----\n    const [currentQuestion, setCurrentQuestion] = useState(1)\n    const [userScore, setUserScore] = useState({})\n    const [userPercent, setUserPercent] = useState(0)\n\n    const navigate = useNavigate()\n\n    useEffect(()=>{\n        setUserPercent(0)\n    }, [])\n\n    useEffect(()=>{\n        setUserScore({...userScore, precent: userPercent})\n    }, [userPercent])\n\n    useEffect(() => {\n        runAgain()\n    },[currentQuestion]);\n\n    const container = {\n        marginTop: '100px',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n    }\n    const title = {\n        frontSize: '40px',\n        textAlign: 'center',\n        margin: '50px'\n    }\n    const subtitle = {\n        fontSize: '20px',\n        textAlign: 'center',\n        width: '550px',\n        margin: '0 auto',\n        paddingBottom: '20px'\n    }\n    const question = {\n        fontSize: '15px',\n        textAlign: 'center',\n        width: '550px',\n        margin: '0 auto',\n        paddingBottom: '20px'\n    }\n    const button = {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n    }\n\n    function runAgain(){\n        if(currentQuestion === 1){\n            props.heapSort(props.heapArray, true)\n        }\n        if(currentQuestion === 2){\n            props.mergeSort(props.mergeArray, true)   \n        }\n        if(currentQuestion === 3){\n            props.quickSort(props.quickArray, true)   \n        }\n        if(currentQuestion === 4){\n            props.bubbleSort(props.bubbleArray, props.bubbleArray.length, true)   \n        }\n    }\n\n    function submitQuestion (e) {\n        e.preventDefault()\n        console.log(userPercent)\n        if(currentQuestion === 1){\n            if(e.target[3].checked === true){\n                setUserPercent(userPercent+25)\n                setUserScore({...userScore, bHeap: 'true'})\n            } else {\n                setUserScore({...userScore, bHeap: 'false'})\n            }\n        }\n        if(currentQuestion === 2){\n            if(e.target[0].checked === true){\n                setUserPercent(userPercent+25)\n                setUserScore({...userScore, bMerge: 'true'})\n            } else {\n                setUserScore({...userScore, bMerge: 'false'}) \n            }\n        }\n        if(currentQuestion === 3){\n            if(e.target[2].checked === true){\n                setUserPercent(userPercent+25)\n                setUserScore({...userScore, bQuick: 'true'})\n            } else {\n                setUserScore({...userScore, bQuick: 'false'}) \n            }\n        }\n        if(currentQuestion === 4){\n            if(e.target[1].checked === true){\n                setUserPercent(userPercent+25)\n                setUserScore({...userScore, bBubble: 'true'})\n            } else {\n                setUserScore({...userScore, bBubble: 'false'}) \n            }\n        }\n        setCurrentQuestion(currentQuestion+1)\n    }\n\n    const postScore = (e) => {\n        e.preventDefault()\n        console.log(userScore.percent+'')\n        let preJSONBody = {\n          bHeap: userScore.bHeap,\n          bMerge: userScore.bMerge,\n          bQuick: userScore.bQuick,\n          bBubble: userScore.bBubble,\n          percent: userPercent,\n          userId: props.user._id\n        }\n        const requestOptions = {\n          method: 'POST',\n          body: JSON.stringify(preJSONBody),\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${props.user.token}`\n          },\n        }\n        console.log(requestOptions.body)\n        fetch(`${apiUrl}/scores`, requestOptions)\n          .then(postedScore=> {\n            navigate('/my-scores')\n          })\n          .catch(err => console.error(err))\n    }\n\n    const body = () =>{\n\n        if(currentQuestion < 5){\n            return (\n                <div style={container}>\n                    <h2 style={title}>Algo Test</h2>\n                    <h3 style={subtitle}>Question {currentQuestion}</h3>\n                    <p style={question}>Watch the animation and guess the sort?</p>\n                    <Graph array={currentQuestion === 1 ? props.heapArray : \n                                        (currentQuestion === 2 ? props.mergeArray : \n                                            (currentQuestion === 3 ? props.quickArray : \n                                                (currentQuestion === 4 ? props.bubbleArray : [])))} \n                                arrColors={props.arrColors}/>\n                    <div className='flexContainer'>\n                        <Form onSubmit={submitQuestion}>\n                            <Form.Group column='true' className=\"mb-3\" controlId=\"formBasicCheckbox\">\n                                <Form.Check type=\"radio\" name=\"Value1\" label=\"Merge Sort\" />\n                                <Form.Check type=\"radio\" name=\"Value1\" label=\"Bubble Sort\" />\n                                <Form.Check type=\"radio\" name=\"Value1\" label=\"Quick Sort\" />\n                                <Form.Check type=\"radio\" name=\"Value1\" label=\"Heap Sort\" />\n                            </Form.Group>\n                            <Button variant=\"primary\" type=\"submit\">\n                                Submit\n                            </Button>\n                        </Form>\n                        \n                    </div>\n                </div>  \n            )\n        } else{\n            return (\n                <div style={container}>\n                    <h2 style={title}>Algo Test Completed</h2>\n                    <h3 style={subtitle}>You got merge sort {userScore.bMerge? 'right' : 'wrong'}</h3>\n                    <h3 style={subtitle}>You got quick sort {userScore.bQuick? 'right' : 'wrong'}</h3>\n                    <h3 style={subtitle}>You got bubble sort {userScore.bBubble? 'right' : 'wrong'}</h3>\n                    <h3 style={subtitle}>You got heap sort {userScore.bHeap? 'right' : 'wrong'}</h3>\n                    {props.user ?<Button style={button} onClick={postScore}>Save Score</Button> : <p style={question}>Make sure you are signed in or you score will not be saved</p>}\n                    <h1 style={title}>{userScore.precent}% was your score</h1>\n                </div>\n            )\n        }\n        \n    }\n\n    return (\n        <>  \n        {body()}\n        </>\n    )\n}\n\nexport default AlgoTest","import React, { useState, useEffect } from 'react'\nimport { Button } from 'react-bootstrap'\nimport apiUrl from '../apiConfig'\n\nconst MyScores = (props) => {\n\n    const [reset, setReset] = useState(false)\n    // Fetch user's scores when page loads\n    const [myScores, setMyScores] = useState([])\n    useEffect(() => {\n\t\tconst requestOptions = {\n\t\t  headers: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\t'Authorization': `Bearer ${props.user.token}`\n\t\t  },\n\t\t}\n        fetch(`${apiUrl}/scores/user/${props.user._id}`, requestOptions)\n        .then(res => res.json())\n        .then(foundObject=>{\n            // Sets API data to state myScores\n            console.log(foundObject)\n            setMyScores(foundObject.myScores)\n        })\n    }, [reset])\n\n    // Delete that score when they press Delete btn\n    const deleteScore = (e) => {\n        const requestOptions = {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${props.user.token}`\n            },\n        }\n        fetch(`${apiUrl}/scores/${e.target.id}`, requestOptions)\n        .then(resBody => {\n            setReset(!reset)\n        })\n    }\n\n    // Style Objects\n    const container = {\n        margin: '100px'\n      }\n    const scoreStyle = {\n        display: 'flex'\n    }\n    const columnStyle = {\n        width: '200px'\n    }\n    const greenText = {\n        color: 'green'\n    }\n    const redText = {\n        color: 'red'\n    }\n    let arrDiv = <h3>No Scores Yet... Time to Test Your Knowledge!</h3>\n    if(myScores[0]){\n        arrDiv = myScores.map(score => {\n            return <div style={scoreStyle}>\n                <span style={columnStyle}>Bubble Sort: <span style={score.bBubble ? greenText:redText}>{score.bBubble ? 'Correct!' : 'Incorrect...'}</span></span>\n                <span style={columnStyle}>Quick Sort: <span style={score.bQuick ? greenText:redText}>{score.bQuick ? 'Correct!' : 'Incorrect...'}</span></span>\n                <span style={columnStyle}>Merge Sort: <span style={score.bMerge ? greenText:redText}>{score.bMerge ? 'Correct!' : 'Incorrect...'}</span></span>\n                <span style={columnStyle}>Heap Sort: <span style={score.bHeap ? greenText:redText}>{score.bHeap ? 'Correct!' : 'Incorrect...'}</span></span>\n                <span style={columnStyle}>Percentage: {score.percent}</span>\n                <Button variant=\"danger\" type=\"goBack\" onClick={deleteScore} id={score._id}>\n                    Delete\n                </Button>\n            </div>\n        })\n    }\n\n    return (\n        <div style={container}>\n            <h1>MyScores</h1>\n            {arrDiv}\n        </div>\n    )\n}\n\nexport default MyScores","// import React, { Component, Fragment } from 'react'\nimport React, { useState, Fragment } from \"react\";\nimport { Route, Routes, Navigate } from \"react-router-dom\";\n\n// import AuthenticatedRoute from './components/shared/AuthenticatedRoute'\nimport Header from \"./components/shared/Header\";\nimport RequireAuth from \"./components/shared/RequireAuth\";\nimport Home from \"./components/Home\";\nimport SignUp from \"./components/auth/SignUp\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignOut from \"./components/auth/SignOut\";\nimport ChangePassword from \"./components/auth/ChangePassword\";\n// import Data Pages\nimport AlgoTest from \"./components/AlgoTest\";\nimport MyScores from \"./components/MyScores\";\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n\n  const clearUser = () => {\n    setUser(null);\n  };\n\n  //----- STATE VARIABLES -----\n  // State for busy doing one of the sorts\n  const [busy, setBusy] = useState(false);\n  // State for number array\n  const [arrayHome, setArrayHome] = useState(generate(200, 5, 1000));\n  const [arrayTestQuick, setArrayTestQuick] = useState(generate(100, 5, 1000));\n  const [arrayTestBubble, setArrayTestBubble] = useState(\n    generate(100, 5, 1000)\n  );\n  const [arrayTestMerge, setArrayTestMerge] = useState(generate(100, 5, 1000));\n  const [arrayTestHeap, setArrayTestHeap] = useState(generate(100, 5, 1000));\n  // State for animation delay\n  const [delay, setDelay] = useState(20);\n\n  function changeDelay(e) {\n    setDelay(e.target.value);\n  }\n\n  // funtion for regenerating random number array\n  function generate(length, min = 0, max = 1000) {\n    let array = [];\n    for (let i = 0; i < length; i++) {\n      array.push(Math.floor(Math.random() * (max - min) + min));\n    }\n    return array;\n  }\n  // funtion for regenerating random number array which just reloads the page\n  function regenerate() {\n    const deployedUrl =\n      \"https://mgkdn9.github.io/sorting-algorithm-visualizer-frontend\";\n    const currentUrl = window.location.href;\n\n    if (currentUrl.includes(\"localhost\")) {\n      // Running locally, reload current page\n      window.location.reload(false);\n    } else {\n      // Otherwise, navigate to deployed URL\n      window.location.href = deployedUrl;\n    }\n  }\n\n  // helper function for swapping items in an array\n  function swap(array, index1, index2) {\n    let temp = array[index1];\n    array[index1] = array[index2];\n    array[index2] = temp;\n  }\n\n  // async helper function for sleeping before swapping items in an array\n  async function sleepThenSwap(array, index1, index2) {\n    // Pause x milliseconds\n    await sleep(delay);\n    swap(array, index1, index2);\n  }\n\n  // async helper function for waiting so many milliseconds\n  async function sleep(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  // Bubble sort when press button\n  async function bubbleSort(array, n, bTest) {\n    if (!bTest) setBusy(true);\n    // Iterative Solution\n    // let swapped = false\n    // let tempArray = array\n    // for(let i=0; i<tempArray.length; i++){\n    //   swapped = false\n    //   for(let j=0; j<tempArray.length-i-1; j++){\n    //     if(tempArray[j] > tempArray[j+1]){\n    //       let temp = tempArray[j]\n    //       tempArray[j] = tempArray[j+1]\n    //       tempArray[j+1] = temp\n    //       swapped = true\n    //     }\n    //   }\n    //   if(!swapped){break}\n    // }\n\n    // Recursive Solution\n    // Base case\n    if (n === 1) return;\n    // After each pass, the largest element is pushed to the end\n    for (let i = 0; i < n - 1; i++)\n      if (array[i] > array[i + 1]) {\n        // swap arr[i] and arr[i+1]\n        await sleepThenSwap(array, i, i + 1);\n        if (bTest) {\n          setArrayTestBubble([...array]);\n        } else {\n          setArrayHome([...array]);\n        }\n      }\n\n    // Largest element is moved to end, recur for remaining array\n    bubbleSort(array, n - 1, bTest);\n  }\n\n  async function quickSort(array, bTest) {\n    if (!bTest) setBusy(true);\n    // function for sorting each half of array\n    async function partition(subArray, leftIndex, rightIndex) {\n      let pivot = subArray[Math.floor((leftIndex + rightIndex) / 2)]; //middle element\n      let i = leftIndex;\n      let j = rightIndex;\n      while (i <= j) {\n        while (subArray[i] < pivot) {\n          i++; //move i to the right until that element is greater than pivot (first element greater than pivot)\n        }\n        while (subArray[j] > pivot) {\n          j--; //move j to the left until that element is less than pivot (first element less than pivot from left)\n        }\n        if (i <= j) {\n          await sleepThenSwap(subArray, i, j); //swap the two elements\n          if (bTest) {\n            await setArrayTestQuick([...subArray]);\n          } else {\n            await setArrayHome([...subArray]);\n          }\n          i++;\n          j--;\n        }\n      }\n      return i; //return pivot position\n    }\n    // recursive function to sort each half of array over and over\n    // this is typically labeled 'quickSort'\n    async function divideAndConquer(subArray, left, right) {\n      if (subArray.length > 1) {\n        let index = await partition(subArray, left, right);\n        if (left < index - 1) {\n          divideAndConquer(subArray, left, index - 1);\n        }\n        if (index < right) {\n          divideAndConquer(subArray, index, right);\n        }\n      }\n      return subArray;\n    }\n    //Go\n    divideAndConquer(array, 0, array.length - 1);\n  }\n\n  async function mergeSort(array, bTest) {\n    if (!bTest) setBusy(true);\n    // Constant space version of merge (as opposed to linear space so this was is better)\n    async function merge(arr, beg, mid, end, maxele) {\n      let i = beg;\n      let j = mid + 1;\n      let k = beg;\n      while (i <= mid && j <= end) {\n        if (arr[i] % maxele <= arr[j] % maxele) {\n          arr[k] = arr[k] + (arr[i] % maxele) * maxele;\n          k++;\n          i++;\n        } else {\n          arr[k] = arr[k] + (arr[j] % maxele) * maxele;\n          k++;\n          j++;\n        }\n      }\n      while (i <= mid) {\n        arr[k] = arr[k] + (arr[i] % maxele) * maxele;\n        k++;\n        i++;\n      }\n      while (j <= end) {\n        arr[k] = arr[k] + (arr[j] % maxele) * maxele;\n        k++;\n        j++;\n      }\n\n      // Obtaining actual values\n      for (i = beg; i <= end; i++) {\n        arr[i] = Math.floor(arr[i] / maxele);\n      }\n      await sleep(delay);\n      if (bTest) {\n        await setArrayTestMerge([...arr]);\n      } else {\n        await setArrayHome([...arr]);\n      }\n    }\n\n    // Recursive merge sort with extra parameter, maxele\n    async function mergeSortRec(arr, beg, end, maxele) {\n      if (beg < end) {\n        let mid = Math.floor((beg + end) / 2);\n        await mergeSortRec(arr, beg, mid, maxele);\n        await mergeSortRec(arr, mid + 1, end, maxele);\n        await merge(arr, beg, mid, end, maxele);\n      }\n    }\n\n    // This functions finds max element and calls recursive merge sort.\n    async function mergeSort(arr, n) {\n      let maxele = Math.max(...arr) + 1;\n      await mergeSortRec(arr, 0, n - 1, maxele);\n    }\n    //Go\n    await mergeSort(array, array.length);\n  }\n\n  async function heapSort(array, bTest) {\n    if (!bTest) setBusy(true);\n    // sets n to length of array\n    let tempArray = array;\n    let n = array.length;\n    // This loop sets the entire array into a heap\n    for (let i = Math.floor(n / 2) - 1; i >= 0; i--) {\n      await heapify(tempArray, n, i);\n      if (bTest) {\n        await setArrayTestHeap([...tempArray]);\n      } else {\n        await setArrayHome([...tempArray]);\n      }\n    }\n\n    // This for loop swaps the first and last elements of the array\n    for (let i = n - 1; i > 0; i--) {\n      swap(tempArray, i, 0);\n      await heapify(tempArray, i, 0);\n      if (bTest) {\n        await setArrayTestHeap([...tempArray]);\n      } else {\n        await setArrayHome([...tempArray]);\n      }\n    }\n  }\n  // function is used to turn an array into a heap\n  async function heapify(arr, n, i) {\n    // sets the largest to i the parent of the heap\n    let largest = i;\n    // sets the childern for heap\n    let l = 2 * i + 1;\n    let r = 2 * i + 2;\n\n    // test two childern to see if larger than head\n    if (l < n && arr[l] > arr[largest]) largest = l;\n\n    if (r < n && arr[r] > arr[largest]) largest = r;\n\n    // if largest is not i then switch its location\n    if (largest !== i) {\n      await sleepThenSwap(arr, i, largest);\n      // run heapify untill this if statement is not true\n      await heapify(arr, n, largest);\n    }\n  }\n\n  return (\n    <Fragment>\n      <Header user={user} />\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <Home\n              user={user}\n              array={arrayHome}\n              setArray={setArrayHome}\n              regenerate={regenerate}\n              bubbleSort={bubbleSort}\n              quickSort={quickSort}\n              mergeSort={mergeSort}\n              heapSort={heapSort}\n              delay={delay}\n              changeDelay={changeDelay}\n              busy={busy}\n            />\n          }\n        />\n        <Route\n          path=\"/algo-test\"\n          element={\n            <AlgoTest\n              user={user}\n              bubbleArray={arrayTestBubble}\n              quickArray={arrayTestQuick}\n              heapArray={arrayTestHeap}\n              mergeArray={arrayTestMerge}\n              setArrayBubble={setArrayTestBubble}\n              setArrayQuick={setArrayTestQuick}\n              setArrayHeap={setArrayTestHeap}\n              setArrayMerge={setArrayTestMerge}\n              bubbleSort={bubbleSort}\n              quickSort={quickSort}\n              mergeSort={mergeSort}\n              heapSort={heapSort}\n            />\n          }\n        />\n        <Route path=\"/sign-up\" element={<SignUp setUser={setUser} />} />\n        <Route path=\"/sign-in\" element={<SignIn setUser={setUser} />} />\n        <Route\n          path=\"/sign-out\"\n          element={\n            <RequireAuth user={user}>\n              <SignOut clearUser={clearUser} user={user} />\n            </RequireAuth>\n          }\n        />\n        <Route\n          path=\"/change-password\"\n          element={\n            <RequireAuth user={user}>\n              <ChangePassword user={user} />\n            </RequireAuth>\n          }\n        />\n        <Route path=\"/my-scores\" element={<MyScores user={user} />} />\n        <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n      </Routes>\n    </Fragment>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <BrowserRouter basename=\"/sorting-algorithm-visualizer-frontend\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}